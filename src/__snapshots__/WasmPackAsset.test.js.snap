// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WasmPackAsset generate, generateLoader, and generateInitializer generateInitializer augments the module generated by wasm-pack based on the target: browser 1`] = `
"import { load } from './wasm-loader.js';
let wasm;
"
`;

exports[`WasmPackAsset generate, generateLoader, and generateInitializer generateInitializer augments the module generated by wasm-pack based on the target: electron 1`] = `
"import { load } from './wasm-loader.js';
let wasm;
"
`;

exports[`WasmPackAsset generate, generateLoader, and generateInitializer generateInitializer augments the module generated by wasm-pack based on the target: node 1`] = `
"import { load } from './wasm-loader.js';
let wasm;
"
`;

exports[`WasmPackAsset generate, generateLoader, and generateInitializer generateLoader writes a file called wasm-loader.js depending on the target 1`] = `
"import fs from 'fs';
import path from 'path';
import { promisify } from 'util';

const readFile = promisify(fs.readFile);

export async function load(wasm, imports) {
  const wasmPath = path.join(__dirname, wasm);
  const bytes = await readFile(wasmPath);

  const wasmModule = new WebAssembly.Module(bytes);
  const wasmInstance = new WebAssembly.Instance(wasmModule, imports);

  load.__wbindgen_wasm_module = wasmModule;
  return wasmInstance.exports;
}
"
`;

exports[`WasmPackAsset getCargoConfig and ensureCargoConfig ensureCargoConfig adds a lib and lib.crate-type = cdylib if missing 1`] = `
"[package]
edition = \\"2018\\"
name = \\"asset-with-wasm-assets\\"
version = \\"0.0.0\\"

[lib]
crate-type = [ \\"cdylib\\" ]
"
`;
