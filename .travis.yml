language: rust
rust: stable

cache:
  cargo: true
  directories:
    # cache yarn
    - $HOME/.cache/yarn

    # cache npm
    - $HOME/.npm
    - node_modules
    - $TRAVIS_BUILD_DIR/node_modules

    # cache parcel
    - $TRAVIS_BUILD_DIR/.cache

env:
  global:
    - secure: otWTFYQmkY4b9N/DttsEgHDbLMBwjhFGzy8cnP0aFyU3Xe+46x910ydoyPtknfnr6Kl+gHNYBJhgQCYhRvUDtaLXJb0oV2HxbCY/yK68ijYizF3H+9wBJNX6NhB92wD0CozUlPFYbiSPIgSRJOCxVRowZ7fPDtnmSYsrBvqJCSZAlV5AFg2ymTOpl/Vf4ZnQJc7FKX60kNRi7eO+QisKHQoSK8YXv3jzqYzqSt/Ndytzrti2pL4AHsrDhEsKOG8OSl2cfrgLeaqdxgMmVYHwLlvl8c9yR4RiYrxpRRVqYZWX1+TZcaqLH01hcLBh79436BYWkrP9sC/jqnb3KxFhDU0SoZAyZJ/qzIlyXz3pEmbHUpiEXFh6mwLpG/AUhQO2olV/37+iAfG7aJnbQ6J52DySgC1es4q8ADWs09wfplvsjYxNEtwk6eUd+nVpbHNrNiWtuR7d4y9Og8gbjDQ5BLP+nqtCVn389jc4Z5fQXAER1s5760lH/5Sj5p1lyOfxBBKRfEvNW/SLX/PaWFF0EncAdBfY+iCSAozDthQ1s9f//Id+HmN8sYRo49iXuXlu2JwUM/TyizZmZ8sDfzIvpW9Hkup2YNRWkWHooPUGlvMVO80QRSZ61feD/p1FOL7PHFvFIEMUOlWOkYl2Xh9VA3Gi9ZRvO6EWCVOjyx9V9oU=
    - secure: DEsFeS4yo+udokTmfux4X3E940DkRDP3B3Lo0zzM8m5L0hWZ0wANv0Qgk2gxtW10uO71rJ/KFmZeMYbQ63Yq2yVm/pZq4Cu2KIAOPNPdbkD3wF2HrXmDmXxFNYVh5fYhKSXeZwyfxY+MIn9XRwFEsTs8bs0FKX7nRTNlpZa1jtjzkzb5ig/UEgXQysjaCq6EHupaDbrY/rt2RmSETgm33mXx2cfhQ4W3qeAMIYP38x2ttZLCyQIC+peK5gHbmJSo/NTqwxTwn3bzH1hOx9F9oibHjFQrUSnWvOJy2MMpbFDzZ+Ih1HvyncM0DE/kKjZXJZW2xAabolfryhEVNIEUamjfAbCDKWWXuAwBiffSDdVfnYfH3w9jNr/9K9xw50p4CTB6IzGUCyloqD74gJJZH3P5z05ScpTFjwqmfq5/qXQTyEO/ROrgP/s2oiK315zSTH7ur9gz9W+OCEeqsEUzvKtHVHKCleElRG18YrHw+DUGunaReRj8tL20InyNvTGhY9zHP6wBIlNpgjYHvWC8jRw6KIIjucu54/zSiljVi14N1p7d9oghefYblmeyLYwMHrmAoRhbifqpwkJcG9wDeizFQ08r8Rw9bYAvN1AVett8b8aqpd8xAyEEM/v6JEHYuqYVT44yVb4i/EmYKmqhki42pb5vKgBJWvKtWXHGsU8=
    - secure: VTSpClpMy5NzPJDYl4DNxrhBES+R3R/Lnsy9pgVKtxJcR1Q+N1lg9LgB1nqpF2fhsy01TEMBt7WcYQUtf5FQJCasY2BzTH12/DXd7eLcyjsc5XIaA0HogXwygBoiPKvfJ8UmhlmtLBVLlXRJ90iFuB+2rnblEqoZ9KjypEN7qT15N4qFvQMxVS2Yksn0IsWv+47EhQqF7wuloUkhSJU7mEK9sFFM32v+5fqvMGKTBmmapPSzB9krzCooyN48k1WPgr+TKkTX8Lf2fj/s9pXzOWTDrpGl5wVvf3YWsRfl6+yNFAF9cf+0edmBvjHJD+hDgo6eIRjzwFRQsodyhHLDaBYXdsYm2yOKJ2u8IdIkH5misJtH02QK7m9T9IJctoGQD1A0B4QIeVUxoJLYLBSlqLaLzemsjl5oz6CDMa1SgtAC39yeUJ5uh1rr6N9fr25802u+IsXVz5jXx5XuDpUSZM5p71vUbGVf68rXLUOAjGnc0Iluuta0T4PeCgeIQGzRnDebKYGOavP/FtllpXcDnhydq6DG/hh4DItz9B90/vCEq+Uq9vX6S4w50fSWDKhZtSkJTM84WwTUENCXDxZsSSNgix4/beHH1WozLWlNI3eHAQ22t4Nqp6xqlZC0mCDhj3ZRVJvpR2J5yYpJoHWBQA/zebBViLImzgzyMPZocqo=
    - secure: Y/dvzfEx3vLWC4Zml60dx3lwoOU5yxSpriFkg8vojUO/OqIK3SSlA5LT4iaaNX22WKXa8/nOMtBlxKEabuyOsgUkrBi7ZO9XFd2xiFMkmf6F2w0m1u6+yiU2iaoFFQX+Rg44cmQgAKmljjuM/8MahaIvfLBaRvlZgYU3eJ0peXrSplHTV7KWwmRQt6OrBcBfWxdxuTVaiqhY4ApFxwqkgUuValCWQ/ubboi5OiqFOK0ZG0wBVT6Ew0fwzAU9zj64Re1evCab5D4/YwFcpb0iow6RagQKI0zdQnm9k0oKNBFeMoBZe2NdOeaENuatkN24QVeJ7TPVwTjbrBxvsyWd8vj4ks/str2tuegbS2aNKJ6BWgq/ZwMFALv3dHDbpvh/cjX703oAo+2pyIB+gMT/i7OQD/ptiaoRZF+1QcTxIF+Cbdzj8mGCL8gKP7JDHq+xZ7QddepNbBqRuPQFbIDffpF2HKF7U7j5OPyUzse1Zl0cVqmiVvBsgFuRyndVHL/N2TCp8ZXStrK2axSFGU5yzuF+rgKA438DrIvNXMY+FwN0b+FWAgIyOohjOeM5rQqlD0G4GEXGZURQDR4W3wDz/GbtckpbDXV+8WN53gOc48jtGkZ42z9wvv6497NvUgjbdP0PjpmZHFduyVMWhAFs/WVDEljXVm+dTbK3eto1K20=

before_install:
  # add node version, read from .nvmrc
  - nvm install

  # add components and targets
  - rustup component add clippy
  - rustup component add rustfmt
  - rustup target add wasm32-unknown-unknown

  # get wasm-pack, wasm-bindgen, install-update
  - (test -x $HOME/.cargo/bin/wasm-pack || cargo install wasm-pack)
  - (test -x $HOME/.cargo/bin/wasm-bindgen || cargo install wasm-bindgen-cli)
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - cargo install-update -a

  # get the right npm version
  - NPM_VERSION=`node -pe "require('./package.engines.json').npm"`
  - if [ `npm --version` != "$NPM_VERSION" ]; then
    npm install --global npm@${NPM_VERSION};
    fi

  # get the right yarn version
  - YARN_VERSION=`node -pe "require('./package.engines.json').yarn"`
  - if [ `yarn --version` != "$YARN_VERSION" ]; then
    curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION;
    export PATH=$HOME/.yarn/bin:$PATH;
    fi

  - yarn install

before_script:
  # code climate's coverage reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
    > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - './cc-test-reporter before-build'

script:
  # build the wasm-modules before running the tests or a bunch of the tests time out
  - cargo build
  - yarn lint
  - yarn test --forceExit

after_success:
  - test $TRAVIS_PULL_REQUEST != "false" && npx semantic-release-github-pr

deploy:
  # deploy a git tag, release notes, bump package.json, update READMEs
  - provider: script
    skip_cleanup: true
    script: npx semantic-release
    on:
      branch: master

after_script:
  # report coverage
  - './cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT'
